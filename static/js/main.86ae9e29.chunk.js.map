{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","togglemode","role","htmlFor","Textform","css","useState","text","setText","color","background","style","heading","onChange","event","console","log","target","value","rows","newtext","toUpperCase","showalert","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","message","defaultProps","App","setMode","setAlert","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.86ae9e29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n        </div>\r\n        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input \" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Stranger'\r\n};\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState('');\r\n  let css;\r\n  if (props.mode === 'light') {\r\n    css = {\r\n      color: 'black',\r\n      background: 'white'\r\n    };\r\n  }\r\n  else {\r\n    css = {\r\n      color: 'white',\r\n      background: 'black'\r\n    }\r\n  }\r\n  function clickuphandler() {\r\n    console.log('Button clicked');\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showalert('success','Converted to Upper Case');\r\n  }\r\n  function clickdownhandler() {\r\n    console.log('Button clicked');\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showalert('success','Converted to Lower Case');\r\n  }\r\n  function onchangehandler(event) {\r\n    console.log('change occured')\r\n    setText(event.target.value);\r\n  }\r\n  return (\r\n    <div className='container' style={css}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"mybox\" className=\"form-label\"><h1>{props.heading}</h1></label>\r\n        <textarea className=\"form-control\" style={css} onChange={onchangehandler} id=\"mybox\" rows=\"8\" value={text}></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" type=\"submit\" onClick={clickuphandler}>Convert To Uppercase</button>\r\n      <button className=\"btn btn-primary\" type=\"submit\" onClick={clickdownhandler}>Convert To Lowercase</button>\r\n      <hr />\r\n      <div className=\"container my-3\" style={css}>\r\n        <h2>Your text Summary</h2>\r\n        <p>Above text has {text.split(' ').length} words and {text.length} character</p>\r\n        <p>User will take approx {0.08 * text.split(' ').length} minutes</p>\r\n        <hr />\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    function capitalize(word){\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert&&<div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.message}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\n\n\n\n\nfunction App() {\n const[mode,setMode]=useState('light');\n const[alert,setAlert]=useState(null);\n function togglemode(){\n   if(mode==='light'){\n     setMode('dark');\n     document.body.style.backgroundColor = 'black';\n     showalert('success','Dark mode enabled');\n   }\n   else{\n     setMode('light');\n     document.body.style.backgroundColor = 'white';\n     showalert('success','Light mode enabled');\n   }\n }\nfunction showalert(type,message){\n  setAlert({\n    type:type,\n    message:message\n  });\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n  \n}\n  return (\n  <>\n  <Navbar mode={mode} togglemode={togglemode}/>\n  <Alert alert={alert} />\n  <Textform heading='Enter Text Here' mode={mode} showalert={showalert}/>\n        \n        \n    \n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}